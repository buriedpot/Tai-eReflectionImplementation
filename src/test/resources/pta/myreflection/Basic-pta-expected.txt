Points-to sets of all variables
[]:<A: void <init>()>/%this -> [[]:NewObj{<Basic: void dotClass()>[5@L12] new A}, []:NewObj{<Basic: void forName()>[6@L19] new A}]
[]:<A: void print1()>/$r0 -> []
[]:<A: void print1()>/%stringconst0 -> [[]:ConstantObj{java.lang.String: "A.print1()"}]
[]:<A: void print1()>/%this -> [[]:NewObj{<Basic: void dotClass()>[5@L12] new A}]
[]:<A: void print2()>/$r0 -> []
[]:<A: void print2()>/%stringconst0 -> [[]:ConstantObj{java.lang.String: "A.print2()"}]
[]:<A: void print2()>/%this -> [[]:NewObj{<Basic: void forName()>[6@L19] new A}]
[]:<Basic: void dotClass()>/$r0 -> [[]:ArrayLengthObj{alloc=0,type=java.lang.Class[]}, []:NewObj{<Basic: void dotClass()>[2@L11] newarray java.lang.Class[%intconst0]}]
[]:<Basic: void dotClass()>/$r1 -> [[]:ConstantObj{java.lang.Class: A.class}]
[]:<Basic: void dotClass()>/$r2 -> [[]:ReflectionMetaObj{alloc=pascal.taie.analysis.pta.plugin.mock.UJMethod@3e931ad0,type=java.lang.reflect.Method}, []:ReflectionMetaObj{alloc=pascal.taie.analysis.pta.plugin.mock.UJMethod@68014c56,type=java.lang.reflect.Method}]
[]:<Basic: void dotClass()>/$r3 -> [[]:NewObj{<Basic: void dotClass()>[5@L12] new A}]
[]:<Basic: void dotClass()>/$r4 -> [[]:ArrayLengthObj{alloc=0,type=java.lang.Object[]}, []:NewObj{<Basic: void dotClass()>[7@L13] newarray java.lang.Object[%intconst0]}]
[]:<Basic: void dotClass()>/%stringconst1 -> [[]:ConstantObj{java.lang.String: "print1"}]
[]:<Basic: void forName()>/$r0 -> [[]:ConstantObj{java.lang.Class: A.class}]
[]:<Basic: void forName()>/$r1 -> [[]:ArrayLengthObj{alloc=0,type=java.lang.Class[]}, []:NewObj{<Basic: void forName()>[3@L18] newarray java.lang.Class[%intconst1]}]
[]:<Basic: void forName()>/$r2 -> [[]:ReflectionMetaObj{alloc=pascal.taie.analysis.pta.plugin.mock.UJMethod@1d9cacfa,type=java.lang.reflect.Method}, []:ReflectionMetaObj{alloc=pascal.taie.analysis.pta.plugin.mock.UJMethod@253c2699,type=java.lang.reflect.Method}]
[]:<Basic: void forName()>/$r3 -> [[]:NewObj{<Basic: void forName()>[6@L19] new A}]
[]:<Basic: void forName()>/$r4 -> [[]:ArrayLengthObj{alloc=0,type=java.lang.Object[]}, []:NewObj{<Basic: void forName()>[8@L20] newarray java.lang.Object[%intconst1]}]
[]:<Basic: void forName()>/%stringconst0 -> [[]:ConstantObj{java.lang.String: "A"}]
[]:<Basic: void forName()>/%stringconst2 -> [[]:ConstantObj{java.lang.String: "print2"}]
[]:<Basic: void main(java.lang.String[])>/r0 -> [[]:EntryPointObj{alloc=<main-arguments>,type=java.lang.String[] in <Basic: void main(java.lang.String[])>}]

Points-to sets of all static fields
<java.lang.System: java.io.PrintStream out> -> []

Points-to sets of all instance fields

Points-to sets of all array indexes
